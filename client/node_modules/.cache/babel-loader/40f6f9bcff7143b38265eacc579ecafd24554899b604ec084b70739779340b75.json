{"ast":null,"code":"var _jsxFileName = \"/Users/yosefshachnovsky/learning/files_uploader/client/src/components/FileUploadComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { postData } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadComponent = ({\n  uploadToS3\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadToS3State, setUploadToS3State] = useState(uploadToS3);\n  const [response, setResponse] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUploadToS3Change = event => {\n    setUploadToS3State(event.target.checked);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      setResponse('Error: No file selected');\n      return;\n    }\n    let formData = new FormData();\n    console.log('file:', file);\n    formData.append('files', file);\n    formData.append('upload_to_s3', uploadToS3State.toString());\n    console.log('formData:', formData);\n    for (const pair of formData.entries()) {\n      console.log('form data val: ', pair[0] + ', ' + pair[1]);\n    }\n    const body = {\n      files: [file],\n      upload_to_s3: uploadToS3State\n    };\n    try {\n      const data = await postData('/upload', body);\n      if (data.error) {\n        setResponse(`Error: ${data.error}`);\n      } else {\n        setResponse(`Success: ${data.message} (${data.filename})`);\n      }\n    } catch (error) {\n      setResponse(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flask Image Upload API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \".png,.jpg,.jpeg,.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"upload_to_s3\",\n          checked: uploadToS3State,\n          onChange: handleUploadToS3Change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), \"Upload to AWS S3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploadComponent, \"xKUU1ybL8SaOFVvkMz4uVbaDRhM=\");\n_c = FileUploadComponent;\nexport default FileUploadComponent;\nvar _c;\n$RefreshReg$(_c, \"FileUploadComponent\");","map":{"version":3,"names":["React","useState","postData","jsxDEV","_jsxDEV","FileUploadComponent","uploadToS3","_s","file","setFile","uploadToS3State","setUploadToS3State","response","setResponse","handleFileChange","event","target","files","handleUploadToS3Change","checked","handleSubmit","preventDefault","formData","FormData","console","log","append","toString","pair","entries","body","upload_to_s3","data","error","message","filename","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","accept","name","_c","$RefreshReg$"],"sources":["/Users/yosefshachnovsky/learning/files_uploader/client/src/components/FileUploadComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { postData } from '../utils/api';\n\nconst FileUploadComponent = ({ uploadToS3 }) => {\n    const [file, setFile] = useState(null);\n    const [uploadToS3State, setUploadToS3State] = useState(uploadToS3);\n    const [response, setResponse] = useState('');\n\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    const handleUploadToS3Change = (event) => {\n        setUploadToS3State(event.target.checked);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!file) {\n            setResponse('Error: No file selected');\n            return;\n        }\n\n        let formData = new FormData();\n        console.log('file:', file);\n        formData.append('files', file);\n        formData.append('upload_to_s3', uploadToS3State.toString());\n\n        console.log('formData:', formData);\n        for (const pair of formData.entries()) {\n            console.log('form data val: ', pair[0] + ', ' + pair[1]);\n        }\n\n        const body = { files: [file], upload_to_s3: uploadToS3State };\n\n        try {\n            const data = await postData('/upload', body);\n            if (data.error) {\n                setResponse(`Error: ${data.error}`);\n            } else {\n                setResponse(`Success: ${data.message} (${data.filename})`);\n            }\n        } catch (error) {\n            setResponse(`Error: ${error.message}`);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Flask Image Upload API</h1>\n            <form onSubmit={handleSubmit}>\n                <input type=\"file\" onChange={handleFileChange} accept=\".png,.jpg,.jpeg,.gif\" />\n                <br />\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"upload_to_s3\"\n                        checked={uploadToS3State}\n                        onChange={handleUploadToS3Change}\n                    />\n                    Upload to AWS S3\n                </label>\n                <button type=\"submit\">Upload</button>\n            </form>\n            <div>{response}</div>\n        </div>\n    );\n};\n\nexport default FileUploadComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}