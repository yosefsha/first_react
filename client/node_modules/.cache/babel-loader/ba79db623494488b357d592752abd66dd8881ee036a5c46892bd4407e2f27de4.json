{"ast":null,"code":"var _jsxFileName = \"/Users/yosefshachnovsky/learning/first_react/src/components/FruitsProvider.js\",\n  _s = $RefreshSig$();\n// fruits provider function that returns a component that contains the Fruits and FruitsCount components\nimport React, { useState, useEffect, useContext } from 'react';\nimport FruitsContext from './FruitsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FruitsProvider({\n  children\n}) {\n  _s();\n  const initialState = []; //['apple', 'banana', 'cherry'];\n  // const { fruits, setFruits } = useContext(FruitsContext);\n\n  const [fruits, setFruits] = useState(initialState);\n  useEffect(() => {\n    // const [fruits, setFruits] = useState(initialState); // Initialize with null or an appropriate placeholder\n    // Check if fruits are already initialized\n    if (!fruits) {\n      // Simulate fetching initial fruits data\n      const fetchFruits = async () => {\n        // const initialFruits = await fetchInitialFruits();\n        setFruits(initialState);\n      };\n      fetchFruits();\n    }\n  }, [fruits]); // Only run this effect if fruits is null\n\n  return /*#__PURE__*/_jsxDEV(FruitsContext.Provider, {\n    value: {\n      fruits,\n      setFruits\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(FruitsProvider, \"ksCdY1X3wfCtBLKqSJg16Qbi5e8=\");\n_c = FruitsProvider;\nvar _c;\n$RefreshReg$(_c, \"FruitsProvider\");","map":{"version":3,"names":["React","useState","useEffect","useContext","FruitsContext","jsxDEV","_jsxDEV","FruitsProvider","children","_s","initialState","fruits","setFruits","fetchFruits","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yosefshachnovsky/learning/first_react/src/components/FruitsProvider.js"],"sourcesContent":["// fruits provider function that returns a component that contains the Fruits and FruitsCount components\nimport React, { useState, useEffect, useContext } from 'react';\n\nimport FruitsContext from './FruitsContext';\n\nexport default function FruitsProvider({ children }) {\n    const initialState = []; //['apple', 'banana', 'cherry'];\n    // const { fruits, setFruits } = useContext(FruitsContext);\n\n    const [fruits, setFruits] = useState(initialState);\n\n    useEffect(() => {\n        // const [fruits, setFruits] = useState(initialState); // Initialize with null or an appropriate placeholder\n        // Check if fruits are already initialized\n        if (!fruits) {\n            // Simulate fetching initial fruits data\n            const fetchFruits = async () => {\n                // const initialFruits = await fetchInitialFruits();\n                setFruits(initialState);\n            };\n\n            fetchFruits();\n        }\n    }, [fruits]); // Only run this effect if fruits is null\n\n    return (\n        <FruitsContext.Provider value={{ fruits, setFruits }}>\n            {children}\n        </FruitsContext.Provider>\n    );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAE9D,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAMC,YAAY,GAAG,EAAE,CAAC,CAAC;EACzB;;EAEA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAACS,YAAY,CAAC;EAElDR,SAAS,CAAC,MAAM;IACZ;IACA;IACA,IAAI,CAACS,MAAM,EAAE;MACT;MACA,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;QAC5B;QACAD,SAAS,CAACF,YAAY,CAAC;MAC3B,CAAC;MAEDG,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,oBACIL,OAAA,CAACF,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEJ,MAAM;MAAEC;IAAU,CAAE;IAAAJ,QAAA,EAChDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC;AAACV,EAAA,CAzBuBF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}