{"ast":null,"code":"// src/api.js\n\nconst HOST = 'localhost';\nconst PORT = 5000;\nconst BASE_URL = `http://${HOST}:${PORT}`;\nconst headers = {\n  'Content-Type': 'application/json'\n  // Add any other default headers you need\n};\nexport const fetchData = async path => {\n  const url = `${BASE_URL}${path}`;\n  try {\n    const response = await fetch(url, {\n      headers\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error;\n  }\n};\nexport const postData = async (path, body) => {\n  const url = `${BASE_URL}${path}`;\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error;\n  }\n};\n\n// Add other HTTP methods (PUT, DELETE, etc.) similarly","map":{"version":3,"names":["HOST","PORT","BASE_URL","headers","fetchData","path","url","response","fetch","ok","Error","data","json","error","console","postData","body","method","JSON","stringify"],"sources":["/Users/yosefshachnovsky/learning/files_uploader/src/utils/api.js"],"sourcesContent":["// src/api.js\n\nconst HOST = 'localhost';\nconst PORT = 5000;\n\nconst BASE_URL = `http://${HOST}:${PORT}`;\n\nconst headers = {\n    'Content-Type': 'application/json',\n    // Add any other default headers you need\n};\n\nexport const fetchData = async (path) => {\n    const url = `${BASE_URL}${path}`;\n    try {\n        const response = await fetch(url, { headers });\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Fetch error:', error);\n        throw error;\n    }\n};\n\nexport const postData = async (path, body) => {\n    const url = `${BASE_URL}${path}`;\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers,\n            body: JSON.stringify(body),\n        });\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Fetch error:', error);\n        throw error;\n    }\n};\n\n// Add other HTTP methods (PUT, DELETE, etc.) similarly\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAG,WAAW;AACxB,MAAMC,IAAI,GAAG,IAAI;AAEjB,MAAMC,QAAQ,GAAI,UAASF,IAAK,IAAGC,IAAK,EAAC;AAEzC,MAAME,OAAO,GAAG;EACZ,cAAc,EAAE;EAChB;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,IAAI,IAAK;EACrC,MAAMC,GAAG,GAAI,GAAEJ,QAAS,GAAEG,IAAK,EAAC;EAChC,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAAEH;IAAQ,CAAC,CAAC;IAC9C,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOV,IAAI,EAAEW,IAAI,KAAK;EAC1C,MAAMV,GAAG,GAAI,GAAEJ,QAAS,GAAEG,IAAK,EAAC;EAChC,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAC9BW,MAAM,EAAE,MAAM;MACdd,OAAO;MACPa,IAAI,EAAEE,IAAI,CAACC,SAAS,CAACH,IAAI;IAC7B,CAAC,CAAC;IACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}